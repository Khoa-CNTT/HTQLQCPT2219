

import React, { useState, useRef, useEffect } from "react";
import axios from "axios";
import styles from "../Css/ChatBox.module.css";
const FAQ_DATA = {
    business_hours: { question: "Qu√°n m·ªü t·ªõi m·∫•y gi·ªù?", answer: "Qu√°n m·ªü c·ª≠a t·ª´ 7:00 s√°ng ƒë·∫øn 10:00 t·ªëi h√†ng ng√†y." },
    location: { question: "Qu√°n ·ªü ƒë√¢u?", answer: "Qu√°n n·∫±m t·∫°i 123 ƒê∆∞·ªùng ABC, Qu·∫≠n 1, TP. HCM." },
    menu: { question: "Menu c√≥ g√¨?", answer: "Qu√°n c√≥ c√°c lo·∫°i c√† ph√™, tr√† s·ªØa, b√°nh ng·ªçt v√† n∆∞·ªõc √©p tr√°i c√¢y." }
};

const ChatBot = () => {
    const [isOpen, setIsOpen] = useState(false);
    const [message, setMessage] = useState("");
    const [messages, setMessages] = useState([]);
    const [loading, setLoading] = useState(false);
    const messagesEndRef = useRef(null); // T·∫°o ref ƒë·ªÉ cu·ªôn xu·ªëng

    const toggleChat = () => {
        if (!isOpen) {
            // Tin nh·∫Øn ch√†o m·ª´ng
            const welcomeMessage = { text: "Xin ch√†o, Coffee House c√≥ th·ªÉ gi√∫p g√¨ cho b·∫°n?", sender: "bot" };

            // Khi m·ªü chat box, hi·ªÉn th·ªã g·ª£i √Ω c√¢u h·ªèi t·ª´ FAQ_DATA
            const suggestions = Object.values(FAQ_DATA).map((faq) => ({
                text: faq.question,
                sender: "suggestion"
            }));

            setMessages([welcomeMessage, ...suggestions]); // Hi·ªÉn th·ªã tin nh·∫Øn ch√†o k√®m g·ª£i √Ω
        } else {
            setMessages([]); // ƒê√≥ng chat box th√¨ x√≥a l·ªãch s·ª≠ chat
        }
        setIsOpen(!isOpen);
    };


    const handleSendMessage = async (userMessage) => {
        if (!userMessage.trim()) return;

        setMessages((prev) => [...prev, { text: userMessage, sender: "user" }]);

        setLoading(true);

        // Ki·ªÉm tra xem c√¢u h·ªèi c√≥ trong FAQ kh√¥ng
        const faqEntry = Object.values(FAQ_DATA).find((faq) => faq.question === userMessage);
        if (faqEntry) {
            // N·∫øu c√≥ trong FAQ, tr·∫£ l·ªùi ngay l·∫≠p t·ª©c m√† kh√¥ng c·∫ßn g·ªçi API
            setMessages((prev) => [...prev, { text: faqEntry.answer, sender: "bot" }]);
        } else {
            // N·∫øu kh√¥ng c√≥ trong FAQ, g·ª≠i y√™u c·∫ßu ƒë·∫øn API
            try {
                const res = await axios.post("http://localhost:8081/api/chat", { message: userMessage });
                setMessages((prev) => [...prev, { text: res.data, sender: "bot" }]);
            } catch (error) {
                console.error("L·ªói khi g·ªçi API:", error);
                setMessages((prev) => [...prev, { text: "C√≥ l·ªói x·∫£y ra, vui l√≤ng th·ª≠ l·∫°i!", sender: "bot" }]);
            }
        }

        setMessage("");
        setLoading(false);
    };
    useEffect(() => {
        messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
    }, [messages]); // M·ªói khi messages thay ƒë·ªïi, cu·ªôn xu·ªëng tin nh·∫Øn m·ªõi nh·∫•t

    return (
        <div className={styles.chatContainer}>
            {!isOpen ? (
                <button className={styles.chatButton} onClick={toggleChat}>üí¨ Chat</button>
            ) : (
                <div className={`${styles.chatBox} ${isOpen ? styles.chatBoxOpen : ""}`}>
                    <div className={styles.chatHeader}>
                        <span>Chat v·ªõi qu√°n ‚òï</span>
                        <button className={styles.chatClose} onClick={toggleChat}>‚úñ</button>
                    </div>
                    <div className={styles.chatMessages}>
                        {messages.map((msg, index) => (
                            <div
                                key={index}
                                className={
                                    msg.sender === "user"
                                        ? styles.userMessage
                                        : msg.sender === "bot"
                                            ? styles.botMessage
                                            : styles.suggestionMessage
                                }
                                onClick={() => msg.sender === "suggestion" && handleSendMessage(msg.text)}
                            >
                                <p>
                                    <strong>{msg.sender === "user" ? "B·∫°n" : msg.sender === "bot" ? "Chatbot" : "üí° G·ª£i √Ω"}: </strong>
                                    {msg.text}
                                </p>
                            </div>
                        ))}
                        <div ref={messagesEndRef} /> {/* Ph·∫ßn t·ª≠ ·∫©n ƒë·ªÉ scroll t·ªõi */}
                    </div>
                    <div className={styles.inputContainer}>
                        <input
                            type="text"
                            className={styles.inputField}
                            value={message}
                            onChange={(e) => setMessage(e.target.value)}
                            placeholder="Nh·∫≠p tin nh·∫Øn..."
                        />
                        <button className={styles.sendButton} onClick={() => handleSendMessage(message)} disabled={loading}>
                            {loading ? "‚è≥" : "G·ª≠i"}
                        </button>
                    </div>
                </div>
            )}
        </div>
    );
};


export default ChatBot;
